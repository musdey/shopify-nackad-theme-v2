{%- style -%}

@media screen and (max-width: 750px) {

    .button-container {
      margin-top: 20px;
      display: flex;
      margin-left: 10px;
      margin-right: 10px;
      margin-bottom: 20px;
      padding: 10px;
    }

    .cart-note {
      width: 90%;
      height: 50px;
    }

    .popup-close {
    position: absolute;
    right: 10px;
    top: 15px;
  }
    .popup-header {
    text-align: center;
    margin-top: 50px;
  }

   .popup-container {
    opacity: 0;
    transition: opacity 1s linear;
    visibility: hidden;
    position: absolute;
    z-index: 3;
    position: fixed;
    inset: 0;
    margin: unset;
    text-align: -webkit-center;
    background: #FFE3E3;
    border-radius: 20px;
    width: 80%;
    max-width: 750px;
    min-width: 250px;
    margin: auto;
    height: fit-content;
  }

  .nack-container {
    display: flex;
  }

  .nack-subcontainer {
    border-radius: 20px;
    padding: 10px;
    background: white;
    text-align: center;
    width:80%;
    margin:10%;
    margin-top: 0px;
    margin-bottom: 0px;
    flex-shrink: 0;
    transition: transform 0.3s ease-in-out;
  }

  .nack-prev,
  .nack-next {
    position: absolute;
    top: 40%;
    transform: translateY(-50%);
    background: transparent;
    border: none;
    font-size: 2.5rem;
    cursor: pointer;
  }

  .nack-prev {
    left: 0.5rem;
  }

  .nack-next {
    right: 0.5rem;
  }

  /* Move the carousel to the left when clicking the "Prev" button */
  .nack-prev:focus + .nack-container .nack-subcontainer:last-child,
  .nack-prev:active + .nack-container .nack-subcontainer:last-child,
  .nack-prev:hover + .nack-container .nack-subcontainer:last-child {
    transform: translateX(-100%);
  }

  /* Move the carousel to the right when clicking the "Next" button */
  .nack-next:focus + .nack-container .nack-subcontainer:first-child,
  .nack-next:active + .nack-container .nack-subcontainer:first-child,
  .nack-next:hover + .nack-container .nack-subcontainer:first-child {
    transform: translateX(-200%);
  }
}

.background-blur{
    opacity: 0;
    transition: opacity 1s linear;
    visibility: hidden;
    text-align: center;
    background: black;
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 3;
    position: fixed;
    overflow-y: scroll;
    inset: 0;
    margin: unset;
    text-align: -webkit-center;
}

@media screen and (min-width: 750px) {

  .button-container {
    float: right;
    margin: 25px;
  }

    .cart-note {
    width: 50%;
    height: 50px;
  }

    .popup-close {
    text-align: right;
    padding-top: 10px;
    padding-right: 10px;
  }

  .nack-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-evenly;
  }

    .nack-subcontainer {
    border-radius: 20px;
    padding: 10px;
    background: white;
    text-align: center;
    width: 195px;
  }

  .popup-container {
      opacity: 0;
      transition: opacity 1s linear;
      visibility: hidden;
      position: absolute;
      z-index: 3;
      position: fixed;
      inset: 0;
      margin: unset;
      text-align: -webkit-center;
      background: #FFE3E3;
      border-radius: 20px;
      width: 75%;
      max-width: 750px;
      min-width: 250px;
      margin: auto;
      height: fit-content;
  }

  .popup-header {
    text-align: center;
    padding-bottom: 10px;
    font-size: 60px;
    margin: 30px;
  }
  .nack-deliveryslot-container {
    min-width: 250px;
    margin: 0 auto;
  }

  .nack-date {
    width: 25%;
    height: 10px;
    min-height: 25px;
  }

  .nack-header {
    width: 100%;
    border-bottom-color: black;
    border-bottom-style: solid;
    padding-bottom: 5px;
    margin-bottom: 15px;
  }


  .nack-input {
    vertical-align: -webkit-baseline-middle;
    align-self: center;
    font-size: 20px;
    accent-color: #3A7B77;
  }

  .nack-button:after {
    background: red;
  }
} /* End desktop  */

/* start generic */

.nack-button {
  margin: 5px;
  height: 40px;
  border-radius: 10px;
  background: #9FD6D2;
  border-color: unset;
  color: white;
  border-style: hidden;
  cursor: pointer;
  vertical-align: -webkit-baseline-middle;
  display: flex;
  justify-content: space-evenly;
}
/* endgeneric */
{%- endstyle -%}

<div id="background-blur" class="background-blur">
</div>
<div id="popup-container" class="popup-container">
    <form action="/checkout" id="checkout">
    <div class="popup-close" >
      <div onclick="closePopup()" style="width:fit-content; height: fit-content; float: right; cursor: pointer;">
        <svg width="20" height="20" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M3.4499 29.85L0.149902 26.55L11.6999 15L0.149902 3.45002L3.4499 0.150024L14.9999 11.7L26.5499 0.150024L29.8499 3.45002L18.2999 15L29.8499 26.55L26.5499 29.85L14.9999 18.3L3.4499 29.85Z" fill="#313131" />
      </svg>
    </div>
    </div>
    <h1 class="popup-header">
      Liefertermin
    </h1>
    <div class="nack-deliveryslot-container">
      <div id="nack-elements" style="overflow:hidden;">
      </div>
      <button type="button" class="nack-prev medium-hide large-up-hide"><</button>
      <button type="button" class="nack-next medium-hide large-up-hide">></button>
    </div>
    <div name="Lieferhinweise">
      <div>
        <div>
            <h2 for="Cart-note">{{ 'sections.cart.note' | t }}</h2>
            <cart-note class="cart-note cart__note field">
                <textarea
                    style="background: white; border-radius: 20px; min-height: 50px; height: 50px;"
                  class="text-area field__input"
                  name="note"
                  form="checkout"
                  id="Cart-note"
                  placeholder="{{ 'sections.cart.note' | t }}"
                >{{ cart.note }}</textarea>
              </cart-note>
        </div>
      </div>
    </div>
    <input id="depositinput" style="display: none;" type="text" name="attributes[deposit]" />
    <script>
      var deposit = document.getElementById("depositinput");
      deposit.value = window.pfandgesamt;
    </script>
  

    <div class="button-container">
      <button type="button" onclick="closePopup()"class="cart__checkout-button button" style="background:#DC9393; margin: 1px;">
        Abbrechen
      </button>
      <button
        style="margin: 1px;"
        type="submit"
        id="checkout"
        class="cart__checkout-button button"
        name="checkout"
        {%comment%}
        Check if cart is below order value
        {%endcomment%}
        {% if cart == empty %}
          disabled
        {% endif %}
      >
        Weiter zur Kasse
      </button>
    </div>
</form>
</div>
<script>
 
    var closePopup = function() {
        document.getElementById("background-blur").style.visibility = "hidden";
        document.getElementById("popup-container").style.visibility = "hidden";
        document.getElementById("background-blur").style.opacity = "0";
        document.getElementById("popup-container").style.opacity = "0";
        document.getElementById("background-blur").style.transition = "visibility 0s 1s, opacity 1s linear";
        document.getElementById("popup-container").style.transition = "visibility 0s 1s, opacity 1s linear";

    }

    var openPopup = function(){
        document.getElementById("popup-container").style.visibility = "visible";
        document.getElementById("popup-container").style.opacity = "1";
        document.getElementById("popup-container").style.transition = "opacity 1s linear";
        document.getElementById("background-blur").style.visibility = "visible";
        document.getElementById("background-blur").style.opacity = "0.6";
        document.getElementById("background-blur").style.transition = "opacity 1s linear";
    }

    var options = {
        weekday: 'short',
        month: 'numeric',
        day: 'numeric'
      };

      var options2 = {
        year: 'numeric',
        month: 'numeric',
        day: 'numeric'
      };
      
      fetch("https://app.nackad.at/api/v1/deliveryslots").then((response) => response.json()).then((data) => {
      
        var PLZ = "";
        var count = 0;
        var curDay = new Date(data[0].deliveryDay).getDay();
        var elem = document.createElement('div');
        var first = true
        var subcontainer = document.createElement('div');
        subcontainer.className = "nack-container"
        elem.className = "nack-subcontainer";
      
        data.forEach((obj, index) => {
          if (obj.available > 0) {
      
            if (first) {
              var dateHeader = document.createElement("div");
              dateHeader.className = "nack-header";
              dateHeader.innerText = new Date(data[0].deliveryDay).toLocaleDateString('de-AT', options);
              elem.appendChild(dateHeader);
              first = false
            }
      
            var incomingDay = new Date(obj.deliveryDay).getDay();
      
            if (curDay != incomingDay) {
              subcontainer.appendChild(elem);
              elem = document.createElement('div');
              elem.className = "nack-subcontainer";
              var dateHeader = document.createElement("div");
              dateHeader.className = "nack-header";
              dateHeader.innerText = new Date(obj.deliveryDay).toLocaleDateString('de-AT', options);
              elem.appendChild(dateHeader);
              curDay = incomingDay;
              count = 0;
            }
      
            var newInput = document.createElement("input");
            var id = "input-" + incomingDay + "-" + obj.slotHours;
            newInput.id = id;
            newInput.className = "nack-input";
            newInput.type = "radio";
            newInput.name = "attributes[deliverySlot]";
            newInput.for = "attributes[deliverySlot]";
            newInput.value = new Date(obj.deliveryDay).toLocaleDateString('de-AT', options2) + "x" + obj.slotHours;
            newInput.required = true;
            var labelText = document.createElement("div");
            labelText.innerText = obj.slotHours;
            labelText.className = "nack-input";
      
            var newLabel = document.createElement("label");
            newLabel.for = id;
            newLabel.className = "nack-button";
            newLabel.appendChild(newInput);
            newLabel.appendChild(labelText);
            elem.appendChild(newLabel);
            count++;
          }
        });
      
        subcontainer.appendChild(elem);
        var finalDestination = document.getElementById('nack-elements');
        finalDestination.appendChild(subcontainer);
        var displayedSubcontainer = document.getElementsByClassName('nack-subcontainer');
        for(item of displayedSubcontainer){
          if(item.childNodes.length == 1){
            item.style.display = "none";
          }
        }

         const prevBtn = document.querySelector(".nack-prev");
  const nextBtn = document.querySelector(".nack-next");
  const container = document.querySelector(".nack-container");

  let currentItem = 0;
  let numItems = container.children.length;

  // Move the carousel to the left
  function movePrev() {
    if (currentItem === 0) {
      currentItem = numItems - 1;
    } else {
      currentItem--;
    }
    updateCarousel();
  }

  // Move the carousel to the right
  function moveNext() {
    if (currentItem === numItems - 1) {
      currentItem = 0;
    } else {
      currentItem++;
    }
    updateCarousel();
  }

  // Update the carousel to show the current item
  function updateCarousel() {
    container.style.transform = `translateX(-${currentItem * 100}%)`;
  }

  prevBtn.addEventListener("click", movePrev);
  nextBtn.addEventListener("click", moveNext);

      });
      
      
</script>